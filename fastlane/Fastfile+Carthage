desc 'Lane to run bootstrap carthage in new checkout for iOS only'
lane :carthage_bootstrap_ios do |options|
  
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_bootstrap(
    platform: 'iOS',
    configuration: configuration,
    derived_data: 'build',
    use_binaries: use_binaries,
    use_rome: use_rome,
    cache_builds: true
  )
end

desc 'Lane to run bootstrap carthage in new checkout for tvOS only'
lane :carthage_bootstrap_tvos do |options|

  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_bootstrap(
    platform: 'tvOS',
    configuration: configuration,
    derived_data: 'build',
    use_binaries: use_binaries,
    use_rome: use_rome,
    cache_builds: true
)
end

desc 'Lane to run bootstrap carthage in new checkout'
desc 'Option: `platform` tvOS,iOS'
lane :carthage_bootstrap do |options|

  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  platform = options.fetch(:platform, CARTHAGE_PLATFORMS)
  configuration = options.fetch(:configuration, 'Release')

  carthage_private(
    command: 'bootstrap',
    configuration: configuration,
    platform: platform,
    use_binaries: use_binaries,
    use_rome: use_rome,
)
end

desc 'Lane to run build all carthage dependencies'
desc 'Option: `platform` tvOS,iOS'
lane :carthage_build do |options|

  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  platform = options.fetch(:platform, CARTHAGE_PLATFORMS)
  configuration = options.fetch(:configuration, 'Release')

  carthage_private(
    command: 'build',
    configuration: configuration,
    platform: platform,
    use_binaries: use_binaries,
    use_rome: use_rome
  )
end

desc 'Lane to run build all carthage dependencies - iOS'
lane :carthage_build_ios do |options|
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_private(
    command: 'build', 
    configuration: configuration,
    platform: 'iOS',
    use_binaries: use_binaries,
    use_rome: use_rome
  )
end

desc 'Lane to run build all carthage dependencies - tvOS'
lane :carthage_build_tvos do |options|
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_private(
    command: 'build', 
    configuration: configuration,
    platform: 'tvOS',
    use_binaries: use_binaries,
    use_rome: use_rome
  )
end

desc 'Lane to update all carthage dependencies to latest versions'
desc 'Option: `platform` tvOS,iOS'
lane :carthage_update do |options|
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  platform = options.fetch(:platform, CARTHAGE_PLATFORMS)
  configuration = options.fetch(:configuration, 'Release')

  carthage_private(
    command: 'update',
    configuration: configuration,
    platform: platform,
    use_binaries: use_binaries,
    use_rome: use_rome
  )

  if use_rome
    rome_upload(platform: platform)
  end
end

desc 'Lane to update all carthage dependencies to latest versions for iOS only'
lane :carthage_update_ios do |options|
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_update(
    platform: 'iOS',
    configuration: configuration,
    derived_data: 'build',
    use_binaries: use_binaries,
    use_rome: use_rome,
    cache_builds: true
  )
end

desc 'Lane to update all carthage dependencies to latest versions for tvOS only'
lane :carthage_update_tvos do |options|
  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  configuration = options.fetch(:configuration, 'Release')

  carthage_update(
    platform: 'tvOS',
    configuration: configuration,
    derived_data: 'build',
    use_binaries: use_binaries,
    use_rome: use_rome,
    cache_builds: true
  )
end

private_lane :carthage_private do |options|
  command = options.fetch(:command, 'bootstrap')

  use_binaries = options.fetch(:use_binaries, true)
  use_ssh = options.fetch(:use_ssh, false)
  use_rome = options.fetch(:use_rome, true)
  platform = options.fetch(:platform, CARTHAGE_PLATFORMS)
  configuration = options.fetch(:configuration, 'Release')
  cache_builds = options.fetch(:cache_builds, true)

  project_directory = options.fetch(:project_directory, './')

  UI.message "Running Carthage '#{command}' for platform(s) ('#{platform}'( in directory ('#{project_directory}')"

  if use_rome
    rome_download(platform: platform)
  end

  carthage(
    command: command,
    derived_data: 'build',
    configuration: configuration,
    platform: platform,
    use_binaries: use_binaries,
    cache_builds: cache_builds,
    use_submodules: use_ssh,
    use_ssh: use_ssh,
    project_directory: project_directory
  )
end
