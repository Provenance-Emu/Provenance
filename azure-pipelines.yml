# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'Provenance'
  sdk: 'iphonesimulator'
  configuration: 'Debug'
  carthage-platform: 'iOS'

steps:

- checkout: self # self represents the repo where the initial Pipelines YAML file was found
  clean: false  # if true, run `execute git clean -ffdx && git reset --hard HEAD` before fetching
  submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules; defaults to not checking out submodules

- task: Cache@2
  inputs:
    key: 'carthage | "$(carthage-platform)" | Cartfile.resolved | Romefile'
    path: Carthage/Build
  displayName: Carthage cache

# This seems to be needed to force carthage to use the same version of XCode as the build/run steps
- script: sudo xcode-select -s "/Applications/Xcode_12.2.app"

- script: |
    ./carthage.sh bootstrap --platform $(carthage-platform) --configuration debug --cache-builds
  displayName: Carthage bootstrap

- task: Xcode@5
  inputs:
    scheme: '$(scheme)'
    xcWorkspacePath: 'Provenance.xcworkspace'
    xcodeVersion: '12' # Options: 8, 9, default, specifyPath
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    packageApp: false
    destinationPlatformOption: iOS
    destinationSimulators: iPhone 8
  displayName: Building project

- task: Xcode@5
  inputs:
    actions: 'test'
    scheme: '$(scheme)'
    xcWorkspacePath: 'Provenance.xcworkspace'
    xcodeVersion: '12' # Options: 8, 9, default, specifyPath
    packageApp: false
    destinationPlatformOption: iOS
    destinationSimulators: iPhone 8
  displayName: Running tests
